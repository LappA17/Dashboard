/*
request --> dto --> middleware(validation) -> controller -> service -> repository -> service -> entity -> controller -> exeption handler -> response
К той схеме добивились изменения, теперь наш запрос не на прямую идёт в мидлвеер, а запросс представляет некий data transform object
dto - это объект передачи данных, в котором содержится те данные которые описывают их структуру и передаются между различными частями системы
в данном случае мы использует дто для передачи на вход запроса и дальнейшей ее обработчки
Благодаря dto мы можем сделать красивую валидацию с помощью декораторов 
middleware(validation) - будем валидировать входящие данные на корректность
service - нужно реализовать промежуточный сервис который потом будет ходить в репозиторий 
entity - это объект в нашей конкретной бизнес единице. Она должна быть сфокусирована на самом Объекте, возможность его создания, возможность его преобразования в другие объекты, а так же внутрение методы. К примеру у пользователя может быть метод который кеширует его пароль, либо пароль пользователя проверяют на валидность. Сервис работает с entity для того что бы работать с бизнес логикой конкретного Объекта
*/
